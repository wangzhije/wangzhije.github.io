{"content":"<h2 id=\"盒模型简述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型简述\"><span>盒模型简述</span></a></h2>\n<p>在网页布局中，盒模型（Box Model）是一个非常基础且重要的概念。每一个 HTML 元素在页面中都会被看作一个矩形的盒子，这个盒子由内容区（Content）、 内边距（Padding）、边框（Border）和外边距（Margin）这几个部分组成</p>\n<h2 id=\"盒模型的组成部分\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的组成部分\"><span>盒模型的组成部分</span></a></h2>\n<ul>\n<li>外边距（Margin）：元素与其他元素之间的距离，可通过 margin-top、margin-right、margin-bottom、margin-left 分别设置四个方向的外边距，也有 margin 简写属性。外边距不会影响元素自身的大小，但会影响元素在页面中的布局位置。</li>\n<li>边框（Border）：围绕在内边距和内容区周围的线条，可通过 border-width、border-style 和 border-color 来定义边框的宽度、样式和颜色，同样也有简写属性 border。边框也会计入元素的整体大小。</li>\n<li>内边距（Padding）：内容区与边框之间的距离，可通过 padding-top、padding-right、padding-bottom、padding-left 分别设置四个方向的内边距，也可以使用 padding 简写属性。内边距会影响元素的整体大小。</li>\n<li>内容区（Content）：元素实际包含的内容，如文本、图片等，其大小由 width 和 height 属性控制（对于行内元素，宽度和高度由内容决定）。</li>\n</ul>\n<h2 id=\"盒模型的类型及区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的类型及区别\"><span>盒模型的类型及区别</span></a></h2>\n<p>在 CSS 中，盒模型主要分为标准盒模型（ W3C 规定）和怪异盒模型（IE 盒模型），它们的主要区别在于元素宽度和高度的计算方式不同。</p>\n<h3 id=\"标准盒模型-content-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#标准盒模型-content-box\"><span>标准盒模型（content-box）</span></a></h3>\n<ul>\n<li>计算方式：元素的宽度（width）和高度（height）只包含内容区的宽度和高度，不包含内边距、边框和外边距。也就是说</li>\n</ul>\n<p><img src=\"@source/notes/1.frontend/2.CSS/imgs/boxmod1.png\" alt=\"标准盒模型\"></p>\n<h3 id=\"怪异盒模型-border-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#怪异盒模型-border-box\"><span>怪异盒模型（border-box）</span></a></h3>\n<ul>\n<li>计算方式：元素的宽度（width）和高度（height）包含了内容区、内边距和边框的大小</li>\n</ul>\n<p><img src=\"@source/notes/1.frontend/2.CSS/imgs/boxmod2.png\" alt=\"怪异盒模型\"></p>\n","env":{"base":"/blog/","filePath":"/Users/wangzhijie/Desktop/myspace/wangzhije.github.io/docs/notes/1.frontend/2.CSS/1.基础/1.盒模型.md","filePathRelative":"notes/1.frontend/2.CSS/1.基础/1.盒模型.md","frontmatter":{"title":"盒模型","createTime":"2025/08/18 13:59:32","permalink":"/frontend/CSS/4h6xo0zf/","tags":["CSS"],"draf":true},"sfcBlocks":{"template":{"type":"template","content":"<template><h2 id=\"盒模型简述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型简述\"><span>盒模型简述</span></a></h2>\n<p>在网页布局中，盒模型（Box Model）是一个非常基础且重要的概念。每一个 HTML 元素在页面中都会被看作一个矩形的盒子，这个盒子由内容区（Content）、 内边距（Padding）、边框（Border）和外边距（Margin）这几个部分组成</p>\n<h2 id=\"盒模型的组成部分\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的组成部分\"><span>盒模型的组成部分</span></a></h2>\n<ul>\n<li>外边距（Margin）：元素与其他元素之间的距离，可通过 margin-top、margin-right、margin-bottom、margin-left 分别设置四个方向的外边距，也有 margin 简写属性。外边距不会影响元素自身的大小，但会影响元素在页面中的布局位置。</li>\n<li>边框（Border）：围绕在内边距和内容区周围的线条，可通过 border-width、border-style 和 border-color 来定义边框的宽度、样式和颜色，同样也有简写属性 border。边框也会计入元素的整体大小。</li>\n<li>内边距（Padding）：内容区与边框之间的距离，可通过 padding-top、padding-right、padding-bottom、padding-left 分别设置四个方向的内边距，也可以使用 padding 简写属性。内边距会影响元素的整体大小。</li>\n<li>内容区（Content）：元素实际包含的内容，如文本、图片等，其大小由 width 和 height 属性控制（对于行内元素，宽度和高度由内容决定）。</li>\n</ul>\n<h2 id=\"盒模型的类型及区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的类型及区别\"><span>盒模型的类型及区别</span></a></h2>\n<p>在 CSS 中，盒模型主要分为标准盒模型（ W3C 规定）和怪异盒模型（IE 盒模型），它们的主要区别在于元素宽度和高度的计算方式不同。</p>\n<h3 id=\"标准盒模型-content-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#标准盒模型-content-box\"><span>标准盒模型（content-box）</span></a></h3>\n<ul>\n<li>计算方式：元素的宽度（width）和高度（height）只包含内容区的宽度和高度，不包含内边距、边框和外边距。也就是说</li>\n</ul>\n<p><img src=\"@source/notes/1.frontend/2.CSS/imgs/boxmod1.png\" alt=\"标准盒模型\"></p>\n<h3 id=\"怪异盒模型-border-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#怪异盒模型-border-box\"><span>怪异盒模型（border-box）</span></a></h3>\n<ul>\n<li>计算方式：元素的宽度（width）和高度（height）包含了内容区、内边距和边框的大小</li>\n</ul>\n<p><img src=\"@source/notes/1.frontend/2.CSS/imgs/boxmod2.png\" alt=\"怪异盒模型\"></p>\n</template>","contentStripped":"<h2 id=\"盒模型简述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型简述\"><span>盒模型简述</span></a></h2>\n<p>在网页布局中，盒模型（Box Model）是一个非常基础且重要的概念。每一个 HTML 元素在页面中都会被看作一个矩形的盒子，这个盒子由内容区（Content）、 内边距（Padding）、边框（Border）和外边距（Margin）这几个部分组成</p>\n<h2 id=\"盒模型的组成部分\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的组成部分\"><span>盒模型的组成部分</span></a></h2>\n<ul>\n<li>外边距（Margin）：元素与其他元素之间的距离，可通过 margin-top、margin-right、margin-bottom、margin-left 分别设置四个方向的外边距，也有 margin 简写属性。外边距不会影响元素自身的大小，但会影响元素在页面中的布局位置。</li>\n<li>边框（Border）：围绕在内边距和内容区周围的线条，可通过 border-width、border-style 和 border-color 来定义边框的宽度、样式和颜色，同样也有简写属性 border。边框也会计入元素的整体大小。</li>\n<li>内边距（Padding）：内容区与边框之间的距离，可通过 padding-top、padding-right、padding-bottom、padding-left 分别设置四个方向的内边距，也可以使用 padding 简写属性。内边距会影响元素的整体大小。</li>\n<li>内容区（Content）：元素实际包含的内容，如文本、图片等，其大小由 width 和 height 属性控制（对于行内元素，宽度和高度由内容决定）。</li>\n</ul>\n<h2 id=\"盒模型的类型及区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#盒模型的类型及区别\"><span>盒模型的类型及区别</span></a></h2>\n<p>在 CSS 中，盒模型主要分为标准盒模型（ W3C 规定）和怪异盒模型（IE 盒模型），它们的主要区别在于元素宽度和高度的计算方式不同。</p>\n<h3 id=\"标准盒模型-content-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#标准盒模型-content-box\"><span>标准盒模型（content-box）</span></a></h3>\n<ul>\n<li>计算方式：元素的宽度（width）和高度（height）只包含内容区的宽度和高度，不包含内边距、边框和外边距。也就是说</li>\n</ul>\n<p><img src=\"@source/notes/1.frontend/2.CSS/imgs/boxmod1.png\" alt=\"标准盒模型\"></p>\n<h3 id=\"怪异盒模型-border-box\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#怪异盒模型-border-box\"><span>怪异盒模型（border-box）</span></a></h3>\n<ul>\n<li>计算方式：元素的宽度（width）和高度（height）包含了内容区、内边距和边框的大小</li>\n</ul>\n<p><img src=\"@source/notes/1.frontend/2.CSS/imgs/boxmod2.png\" alt=\"怪异盒模型\"></p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"## 盒模型简述\n\n在网页布局中，盒模型（Box Model）是一个非常基础且重要的概念。每一个 HTML 元素在页面中都会被看作一个矩形的盒子，这个盒子由内容区（Content）、 内边距（Padding）、边框（Border）和外边距（Margin）这几个部分组成\n\n## 盒模型的组成部分\n\n- 外边距（Margin）：元素与其他元素之间的距离，可通过 margin-top、margin-right、margin-bottom、margin-left 分别设置四个方向的外边距，也有 margin 简写属性。外边距不会影响元素自身的大小，但会影响元素在页面中的布局位置。\n- 边框（Border）：围绕在内边距和内容区周围的线条，可通过 border-width、border-style 和 border-color 来定义边框的宽度、样式和颜色，同样也有简写属性 border。边框也会计入元素的整体大小。\n- 内边距（Padding）：内容区与边框之间的距离，可通过 padding-top、padding-right、padding-bottom、padding-left 分别设置四个方向的内边距，也可以使用 padding 简写属性。内边距会影响元素的整体大小。\n- 内容区（Content）：元素实际包含的内容，如文本、图片等，其大小由 width 和 height 属性控制（对于行内元素，宽度和高度由内容决定）。\n\n## 盒模型的类型及区别\n\n在 CSS 中，盒模型主要分为标准盒模型（ W3C 规定）和怪异盒模型（IE 盒模型），它们的主要区别在于元素宽度和高度的计算方式不同。\n\n### 标准盒模型（content-box）\n\n- 计算方式：元素的宽度（width）和高度（height）只包含内容区的宽度和高度，不包含内边距、边框和外边距。也就是说\n\n![标准盒模型](../imgs/boxmod1.png)\n\n### 怪异盒模型（border-box）\n\n- 计算方式：元素的宽度（width）和高度（height）包含了内容区、内边距和边框的大小\n\n![怪异盒模型](../imgs/boxmod2.png)","excerpt":"","includedFiles":[],"tasklistId":0,"title":"","headers":[{"level":2,"title":"盒模型简述","slug":"盒模型简述","link":"#盒模型简述","children":[]},{"level":2,"title":"盒模型的组成部分","slug":"盒模型的组成部分","link":"#盒模型的组成部分","children":[]},{"level":2,"title":"盒模型的类型及区别","slug":"盒模型的类型及区别","link":"#盒模型的类型及区别","children":[{"level":3,"title":"标准盒模型（content-box）","slug":"标准盒模型-content-box","link":"#标准盒模型-content-box","children":[]},{"level":3,"title":"怪异盒模型（border-box）","slug":"怪异盒模型-border-box","link":"#怪异盒模型-border-box","children":[]}]}]}}
