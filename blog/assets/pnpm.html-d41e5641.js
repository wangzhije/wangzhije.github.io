import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as l,b as e,e as s,w as d,d as n,f as p}from"./app-a98e131c.js";const c={},u=e("h1",{id:"pnpm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pnpm","aria-hidden":"true"},"#"),n(" pnpm")],-1),h=e("blockquote",null,[e("ul",null,[e("li",null,"Fast, disk space efficient package manager"),e("li",null,"快，节省磁盘空间，的 package 管理器")])],-1),m=e("p",null,"相关链接",-1),_=p(`<h2 id="高效利用磁盘空间" tabindex="-1"><a class="header-anchor" href="#高效利用磁盘空间" aria-hidden="true">#</a> 高效利用磁盘空间</h2><p>硬链接(Hard Link)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>硬连接指通过索引节点来进行连接。
在Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。
在Linux中，多个文件名指向同一索引节点是存在的。一般这种连接就是硬连接。
硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删”的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的连接。
只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。
也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>软连接(Symbolic Link)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>另外一种连接称之为符号连接，也叫软连接。
软链接文件有类似于Windows的快捷方式。
它实际上是一个特殊的文件。
在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="支持-monorepo" tabindex="-1"><a class="header-anchor" href="#支持-monorepo" aria-hidden="true">#</a> 支持 monorepo</h2><p>monorepo 的宗旨就是用一个 git 仓库来管理多个子项目，所有的子项目都存放在根目录的 packages 目录下，那么一个子项目就代表一个 package。</p><p>monorepo 管理工具 <code>lerna</code></p><p>项目参考：<code>babel</code></p><h2 id="安全" tabindex="-1"><a class="header-anchor" href="#安全" aria-hidden="true">#</a> 安全</h2><p>之前在使用 npm/yarn 的时候，由于 node_module 的扁平结构，如果 A 依赖 B， B 依赖 C，那么 A 当中是可以直接使用 C 的，但问题是 A 当中并没有声明 C 这个依赖。</p><p>因此会出现这种非法访问的情况。</p><p>但 pnpm 自创了一套依赖管理方式，很好地解决了这个问题，保证了安全性。</p>`,13),b=e("h2",{id:"不适用的场景",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#不适用的场景","aria-hidden":"true"},"#"),n(" 不适用的场景")],-1),v={href:"https://github.com/nodejs/node/discussions/37509",target:"_blank",rel:"noopener noreferrer"},f=e("p",null,"在里面作者提到了目前 nodejs 软连接不能适用的一些场景，希望 nodejs 能提供一种 link 方式而不是使用软连接，同时也提到了 pnpm 目前因为软连接而不能使用的场景:",-1),k=e("ul",null,[e("li",null,"Electron 应用无法使用 pnpm"),e("li",null,"部署在 lambda 上的应用无法使用 pnpm"),e("li",null,"一些 nodejs 基础库不支持 symlink 的情况导致使用 pnpm 无法正常工作，不过这些库在迭代更新之后也会支持这一特性。")],-1),x=e("h2",{id:"未来会做的一些事情",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#未来会做的一些事情","aria-hidden":"true"},"#"),n(" 未来会做的一些事情")],-1),g=e("h3",{id:"脱离-node-js",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#脱离-node-js","aria-hidden":"true"},"#"),n(" 脱离 Node.js")],-1),j={href:"https://github.com/pnpm/pnpm/discussions/3434",target:"_blank",rel:"noopener noreferrer"},w=e("p",null,"安装 pnpm 的， 可以基本上脱离掉 nodejs 这个 runtime 去进行安装使用。",-1),L=e("p",null,"可以通过 pnpm 来使用不同版本的 nodejs 来去做依赖安装，类似于 nvm 提供的功能。",-1),N={href:"https://www.npmjs.com/package/@pnpm/beta",target:"_blank",rel:"noopener noreferrer"},B={href:"https://pnpm.io/cli/env",target:"_blank",rel:"noopener noreferrer"},C=e("h3",{id:"使用-rust-写一些模块",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#使用-rust-写一些模块","aria-hidden":"true"},"#"),n(" 使用 rust 写一些模块")],-1),y={href:"https://github.com/pnpm/pnpm/discussions/3419",target:"_blank",rel:"noopener noreferrer"};function E(I,V){const o=i("RouterLink"),a=i("ExternalLinkIcon");return r(),l("div",null,[u,h,m,e("ul",null,[e("li",null,[s(o,{to:"/Node/Package/!https:/www.pnpm.cn/"},{default:d(()=>[n("pnpm 中文网")]),_:1})])]),_,e("blockquote",null,[e("p",null,[s(o,{to:"/Node/Package/!./nodeModules.html"},{default:d(()=>[n("node_modules 结构历史")]),_:1})])]),b,e("p",null,[n("前面有提到关于 pnpm 的主要问题在于 symlink(软链接)在一些场景下会存在兼容的问题，可以参考作者在 nodejs 那边开的一个 "),e("a",v,[n("node discussion"),s(a)])]),f,k,x,g,e("p",null,[n("具体可以参考 "),e("a",j,[n("pnpm discussions"),s(a)])]),w,L,e("p",null,[n("目前该特性其实已经到了 "),e("a",N,[n("beta 版本"),s(a)]),n("，可以参考这个包。")]),e("p",null,[n("管理不同版本的 nodejs 功能可以参考 env 这个子命令: "),e("a",B,[n("pnpm-cli-env"),s(a)])]),C,e("p",null,[n("具体可以看"),e("a",y,[n("pnpm discussion"),s(a)]),n("讨论的内容，大概就是作者希望给 pnpm 的一些子命令提供一些 rust 的 cli wrapper 来做提升性能使用。")])])}const P=t(c,[["render",E],["__file","pnpm.html.vue"]]);export{P as default};
