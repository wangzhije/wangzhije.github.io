import{_ as i,V as o,W as s,Y as e,$ as n,a0 as a,Z as l,a1 as u,C as d}from"./framework-ad6b4471.js";const r={},c=e("h1",{id:"网站换肤实现",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#网站换肤实现","aria-hidden":"true"},"#"),l(" 网站换肤实现")],-1),q=e("code",null,"<link>",-1),h=u(`<p>常用几种方式</p><ol><li>全局的 class 控制样式切换</li></ol><ul><li>问题：代码繁琐、样式优先级较高，所以优先级可能出现混乱，不好维护</li></ul><ol start="2"><li>加载不同的 css 文件，改变 link 元素的 href 地址</li></ol><ul><li>问题：加载有延迟，样式切换不流畅，体验不佳</li></ul><ol start="3"><li>利用原生的 HTML 的 link 属性</li></ol><ul><li>优点 <ul><li>兼容性好：兼容 IE8+；（其他待测试）</li><li>语义性好：用户、开发者、搜索引擎、辅助阅读设备，能准确识别</li><li>用户体验好：秒渲染，切换无感知，无延迟</li></ul></li></ul><h2 id="利用原生的-html-的-link-属性" tabindex="-1"><a class="header-anchor" href="#利用原生的-html-的-link-属性" aria-hidden="true">#</a> 利用原生的 HTML 的 link 属性</h2><p>代码实现</p><div class="language-HTML line-numbers-mode" data-ext="HTML"><pre class="language-HTML"><code>&lt;!-- 常规样式表 --&gt;
&lt;link id=&quot;normalize&quot; type=&quot;text/css&quot; href=&quot;normalize.css&quot; rel=&quot;stylesheet&quot;&gt;
&lt;!-- 首选样式表 --&gt;
&lt;link id=&quot;default&quot; type=&quot;text/css&quot; href=&quot;default.css&quot; title=&quot;默认皮肤&quot; rel=&quot;stylesheet&quot;&gt;
&lt;!-- 替换样式表1 --&gt;
&lt;link id=&quot;light&quot; type=&quot;text/css&quot; href=&quot;light.css&quot; title=&quot;白天模式&quot; rel=&quot;alternate stylesheet&quot;&gt;
&lt;!-- 替换样式表2 --&gt;
&lt;link id=&quot;dark&quot; type=&quot;text/css&quot; href=&quot;dark.css&quot; title=&quot;夜间模式&quot; rel=&quot;alternate stylesheet&quot;&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-JavaScript line-numbers-mode" data-ext="JavaScript"><pre class="language-JavaScript"><code>document.querySelector(&#39;link#lght&#39;).disabled = false;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>link 元素的加载和渲染</p><ul><li><strong>常规样式表</strong><ul><li>无 <code>title</code> 无 <code>rel.alternate</code></li><li>必加载，必渲染</li></ul></li><li><strong>首选样式表</strong><ul><li>有 <code>title</code> 无 <code>rel.alternate</code></li><li>会加载，会渲染</li></ul></li><li><strong>替换样式表</strong><ul><li>规范：定义替换样式表，必要上面有首选样式表</li><li>有 <code>title</code> 有 <code>rel.alternate</code></li><li>只加载，不渲染</li></ul></li></ul><p>如何切换渲染不同的 link 加载样式</p>`,14);function v(m,p){const t=d("RouterLink");return o(),s("div",null,[c,e("p",null,[n(t,{to:"/frontend/HTML/Element/link.html"},{default:a(()=>[q,l(" 元素属性")]),_:1})]),h])}const _=i(r,[["render",v],["__file","style.html.vue"]]);export{_ as default};
