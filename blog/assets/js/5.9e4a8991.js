(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{273:function(t,e,v){t.exports=v.p+"assets/img/webkit.85a66640.png"},274:function(t,e,v){t.exports=v.p+"assets/img/gecko.b074db49.jpg"},275:function(t,e,v){t.exports=v.p+"assets/img/all.dca4cc3a.jpg"},312:function(t,e,v){"use strict";v.r(e);var _=v(13),a=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"浏览器渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染"}},[t._v("#")]),t._v(" 浏览器渲染")]),t._v(" "),e("h2",{attrs:{id:"渲染引擎的主流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎的主流程"}},[t._v("#")]),t._v(" 渲染引擎的主流程")]),t._v(" "),e("p",[t._v("浏览器内核不同，前端关注的主要是渲染引擎的不同")]),t._v(" "),e("p",[t._v("主流程基本一致")]),t._v(" "),e("ul",[e("li",[t._v("解析 HTML 以构建 DOM 树")]),t._v(" "),e("li",[t._v("解析 CSS 以构建 StyleRules")]),t._v(" "),e("li",[t._v("构建 render 树")]),t._v(" "),e("li",[t._v("排版布局 render 树")]),t._v(" "),e("li",[t._v("绘制 render 树")]),t._v(" "),e("li",[t._v("显示内容")])]),t._v(" "),e("p",[t._v("Webkit\n"),e("img",{attrs:{src:v(273),alt:"Webkit 渲染"}})]),t._v(" "),e("p",[t._v("Gecko\n"),e("img",{attrs:{src:v(274),alt:"Gecko 渲染"}})]),t._v(" "),e("p",[t._v("加入 JavaScript 后\n"),e("img",{attrs:{src:v(275),alt:"渲染总流程"}})]),t._v(" "),e("h2",{attrs:{id:"html-解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html-解析"}},[t._v("#")]),t._v(" HTML 解析")]),t._v(" "),e("h3",{attrs:{id:"遇到-script-标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#遇到-script-标签"}},[t._v("#")]),t._v(" 遇到 "),e("code",[t._v("<script>")]),t._v(" 标签")]),t._v(" "),e("ul",[e("li",[t._v("当遇到（同步）脚本（标签中不含 "),e("code",[t._v("async")]),t._v(" 或 "),e("code",[t._v("defer")]),t._v("）则停止 HTML 解析，先去加载脚本，然后执行，执行结束后继续解析 HTML 文档")]),t._v(" "),e("li",[t._v("当遇到 "),e("code",[t._v("defer")]),t._v(" 脚本，则在后台加载脚本。文档解析过程不中断，而等文档解析结束之后，defer 脚本执行")]),t._v(" "),e("li",[t._v("当遇到 "),e("code",[t._v("async")]),t._v(" 脚本，则在后台加载脚本。文档解析过程不中断，脚本加载完成后，文档停止解析，脚本执行，执行结束后文档继续解析")])]),t._v(" "),e("h3",{attrs:{id:"domcontentloaded-和-load-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloaded-和-load-事件"}},[t._v("#")]),t._v(" DOMContentLoaded 和 load 事件")]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("DOMContentLoaded：当 HTML 文档解析完成 DOM Tree 就会触发，不受 CSS 解析影响；")]),t._v(" "),e("li",[t._v("load：当所有资源加载完成之后触发")])])]),t._v(" "),e("p",[t._v("在 body 中第一个 script 资源下载完成之前，浏览器会进行"),e("strong",[t._v("首次渲染")]),t._v("。")]),t._v(" "),e("p",[t._v("将该 script 标签前面的 DOM 树和 CSSOM 合并成一棵 Render 树，渲染到页面中。")]),t._v(" "),e("p",[t._v("这是页面从"),e("strong",[t._v("白屏")]),t._v("到首次渲染的时间节点，比较关键。")]),t._v(" "),e("ul",[e("li",[t._v("同步脚本")]),t._v(" "),e("li",[e("code",[t._v("defer")]),t._v(" 脚本\n"),e("ul",[e("li",[t._v("顺序\n"),e("ul",[e("li",[t._v("HTML 还没解析完成时，defer 脚本已经加载完毕，那么 defer 脚本将等待 HTML 解析完成后再执行。defer 脚本执行完毕后触发 DOMContentLoaded 事件")]),t._v(" "),e("li",[t._v("HTML解析完成时，defer脚本还没加载完毕，那么defer脚本继续加载，加载完成后直接执行，执行完毕后触发DOMContentLoaded事件")])])])])]),t._v(" "),e("li",[e("code",[t._v("async")]),t._v(" 脚本：\n"),e("ul",[e("li",[t._v("带 async 的脚本一定会在 load 事件之前执行")]),t._v(" "),e("li",[t._v("可能会在 DOMContentLoaded 之前或之后执行")]),t._v(" "),e("li",[t._v("顺序\n"),e("ul",[e("li",[t._v("HTML 还没有被解析完的时候，async 脚本已经加载完了，那么 HTML 停止解析，去执行脚本，脚本执行完毕后触发 DOMContentLoaded 事件")]),t._v(" "),e("li",[t._v("HTML 解析完了之后，async 脚本才加载完，然后再执行脚本，那么在 HTML 解析完毕、async 脚本还没加载完的时候就触发 DOMContentLoaded 事件")])])])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);