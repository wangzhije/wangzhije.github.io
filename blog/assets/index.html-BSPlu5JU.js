import{_ as t,c as s,e as a,o as r}from"./app-B1IA4K4S.js";const i="/blog/assets/webkit-CZsWJtc_.png",n="/blog/assets/gecko-Don63sxU.jpg",p="/blog/assets/all-CTJAMep-.jpg",l={};function o(c,e){return r(),s("div",null,e[0]||(e[0]=[a('<h2 id="渲染引擎的主流程" tabindex="-1"><a class="header-anchor" href="#渲染引擎的主流程"><span>渲染引擎的主流程</span></a></h2><p>浏览器内核不同，前端关注的主要是渲染引擎的不同</p><p>主流程基本一致</p><ul><li>解析 HTML 以构建 DOM 树</li><li>解析 CSS 以构建 StyleRules</li><li>构建 render 树</li><li>排版布局 render 树</li><li>绘制 render 树</li><li>显示内容</li></ul><p>Webkit</p><p><img src="'+i+'" alt="Webkit 渲染"></p><p>Gecko</p><p><img src="'+n+'" alt="Gecko 渲染"></p><p>加入 JavaScript 后</p><p><img src="'+p+'" alt="渲染总流程"></p><h2 id="重绘和重排" tabindex="-1"><a class="header-anchor" href="#重绘和重排"><span>重绘和重排</span></a></h2>',11)]))}const m=t(l,[["render",o]]),_=JSON.parse('{"path":"/frontend/browser/8pup4yuq/","title":"浏览器渲染","lang":"zh-CN","frontmatter":{"title":"浏览器渲染","createTime":"2023/05/25 15:28:27","permalink":"/frontend/browser/8pup4yuq/","tags":["浏览器"]},"readingTime":{"minutes":0.39,"words":117},"git":{},"filePathRelative":"notes/1.frontend/4.浏览器/5.浏览器渲染.md","headers":[]}');export{m as comp,_ as data};
