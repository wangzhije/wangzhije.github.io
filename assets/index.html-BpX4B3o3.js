import{_ as s,c as a,e as l,o as e}from"./app-DoYSvn9w.js";const t={};function n(h,i){return e(),a("div",null,i[0]||(i[0]=[l(`<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 克隆远端仓库到本地</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ur</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">l</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 克隆远端仓库到本地，并同时切换到指定分支 branch1</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ur</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">l</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -b</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> branch1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 克隆远端仓库到本地并指定本地仓库的文件夹名称为 my-project</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ur</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">l</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my-project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 只拉取最近一次commit，用于快速clone，查不到commit记录</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --depth</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">repositor</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">y</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="git-clone-depth-1-repository-快速clone" tabindex="-1"><a class="header-anchor" href="#git-clone-depth-1-repository-快速clone"><span><code>git clone --depth 1 &lt;repository&gt;</code> 快速clone</span></a></h3><ul><li>为什么快？下载的内容少了。</li><li>代码是全的吗？是的。完全可以正常开发、拉取、提交</li><li>下载内容少了什么？ 历史 commit</li><li>问题 1：历史 commit <ul><li><code>git reset</code> 不能切换到历史 commit</li><li><code>git pull</code> 不能拉取历史 commit</li><li>解决：<code>git pull --unshallow</code> 需要的时候再下载历史 commit 就行了</li></ul></li><li>问题 2：分支 branch <ul><li>拉取到本地的代码库只有一个主分支，不能查看到所有分支，不能切换分支</li><li>直接 fetch 不行，fetch 用于拉取新的 commit 到本地</li><li>解决：修改 fetch 配置 <ul><li>单个分支 <code>git config remote.origin.fetch &quot;+refs/heads/&lt;branchName&gt;:refs/remotes/origin/&lt;branchName&gt;&quot;</code></li><li>所有分支 <code>git config remote.origin.fetch &quot;+refs/heads/*:refs/remotes/origin/*&quot;</code></li></ul></li></ul></li><li>Git 底层 <ul><li>glob 对象: 存储文件内容</li><li>tree 对象: 存储文件路径</li><li>commit 对象: 存储 commit，关联多个 tree</li></ul></li></ul>`,3)]))}const p=s(t,[["render",n]]),k=JSON.parse('{"path":"/tools/git/qs4vyxbe/","title":"git clone","lang":"zh-CN","frontmatter":{"title":"git clone","createTime":"2025/08/18 17:41:24","permalink":"/tools/git/qs4vyxbe/"},"readingTime":{"minutes":1.04,"words":311},"git":{"createdTime":1691145720000,"updatedTime":1756099572000,"contributors":[{"name":"wangzhije","username":"wangzhije","email":"1662285571@qq.com","commits":4,"avatar":"https://avatars.githubusercontent.com/wangzhije?v=4","url":"https://github.com/wangzhije"}]},"filePathRelative":"notes/工具/1.Git/高频命令/clone.md","headers":[]}');export{p as comp,k as data};
